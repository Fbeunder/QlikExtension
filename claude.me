# QlikExtension - Live Treinen Volgen

## 1. Projectoverzicht
Dit project betreft een Qlik Sense extensie waarmee gebruikers real-time treinen kunnen volgen in een dashboard. De extensie maakt gebruik van externe API's om treinlocaties op te halen en weer te geven, en kan gefilterd worden op basis van treinnummers die in de Qlik Sense applicatie aanwezig zijn.

## 2. Architectuur
De extensie volgt de standaard Qlik Sense extensie structuur:

```
LiveTrainExtension/
├── LiveTrainExtension.js         # Hoofdmodule voor de extensie
├── LiveTrainExtension.qext       # Qlik extensie metadata bestand
├── initialProperties.js          # Initiële eigenschappen configuratie
├── propertyPanel.js              # Configuratie van het eigenschappen paneel
├── api/
│   ├── trainDataService.js       # Service voor het ophalen van treingegevens
│   └── apiConfig.js              # API configuratie en endpoints
├── ui/
│   ├── mapRenderer.js            # Verantwoordelijk voor het weergeven van de kaart
│   └── trainVisualizer.js        # Functionaliteit voor het visualiseren van treinen op de kaart
└── lib/                          # Externe bibliotheken
    ├── css/
    │   └── style.css             # Stylesheet voor de extensie
    └── js/
        └── qlik-style.js         # Hulpprogramma voor integratie met Qlik stijlen
```

## 3. Modules

### 3.1 LiveTrainExtension.js
* **Status**: Voltooid - Geïntegreerd met trainDataService, selectiemogelijkheden, mapRenderer, en trainVisualizer
* **Bestandsnaam**: LiveTrainExtension.js
* **Functionaliteit**: Hoofdmodule die de extensie initialiseert en integreert met Qlik Sense
* **Belangrijkste functies**:
  * `paint(element, layout)`: 
    * Parameters: 
      * element (HTMLElement): DOM element waar de visualisatie in geplaatst wordt
      * layout (Object): Layout configuratie van Qlik Sense
    * Return waarde: Belofte die wordt opgelost wanneer het tekenen is voltooid
    * Afhankelijkheden: trainDataService.js, apiConfig.js, mapRenderer.js, trainVisualizer.js
  * `initMap($element, layout)`: 
    * Parameters: 
      * $element (jQuery): jQuery element met de extensie
      * layout (Object): Layout object met configuratie
    * Return waarde: Geen
    * Afhankelijkheden: mapRenderer.js
  * `updateTrainVisualization(trainData, selectedTrainIds)`:
    * Parameters:
      * trainData (Array): Array met treingegevens
      * selectedTrainIds (Array): Array met geselecteerde treinnummers
    * Return waarde: Geen
    * Afhankelijkheden: mapRenderer.js, trainVisualizer.js
  * `refreshTrainData(trainNumbers, $element)`: 
    * Parameters: 
      * trainNumbers (Array): Lijst met treinnummers om te filteren
      * $element (jQuery): jQuery element om te updaten
    * Return waarde: Geen
    * Afhankelijkheden: trainDataService.js
  * `controller()`: 
    * Parameters: Geen
    * Return waarde: Controller object
    * Afhankelijkheden: trainDataService.js, apiConfig.js, mapRenderer.js, trainVisualizer.js
  * `getSelectedTrainNumbers(layout)`: 
    * Parameters: 
      * layout (Object): Layout object met hypercube data
    * Return waarde: Array met geselecteerde treinnummers
    * Afhankelijkheden: Geen
  * `selectTrain(trainId, multiSelect)`: 
    * Parameters: 
      * trainId (String): Treinnummer om te selecteren
      * multiSelect (Boolean): Of meerdere selecties toegestaan zijn
    * Return waarde: Geen
    * Afhankelijkheden: Qlik API
  * `clearSelections()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Qlik API

### 3.2 LiveTrainExtension.qext
* **Status**: Voltooid
* **Bestandsnaam**: LiveTrainExtension.qext
* **Functionaliteit**: Metadata bestand voor de extensie
* **Belangrijkste functies**: N.v.t. (JSON configuratiebestand)

### 3.3 initialProperties.js
* **Status**: Voltooid
* **Bestandsnaam**: initialProperties.js
* **Functionaliteit**: Definieert de initiële eigenschappen van de extensie
* **Belangrijkste functies**: N.v.t. (exporteert alleen een configuratie object)

### 3.4 propertyPanel.js
* **Status**: Voltooid - Uitgebreid met selectie configuratie-opties
* **Bestandsnaam**: propertyPanel.js
* **Functionaliteit**: Definieert het eigenschappen paneel voor de extensie
* **Belangrijkste functies**:
  * `getDefinition()`: 
    * Parameters: Geen
    * Return waarde: Eigenschappen paneel definitie object
    * Afhankelijkheden: Geen

### 3.5 trainDataService.js
* **Status**: Voltooid
* **Bestandsnaam**: api/trainDataService.js
* **Functionaliteit**: Service voor het ophalen van treingegevens van externe API's
* **Belangrijkste functies**:
  * `getTrainLocations(trainNumbers)`: 
    * Parameters: 
      * trainNumbers (Array): Lijst met treinnummers om te filteren
    * Return waarde: Belofte met treinlocatie gegevens
    * Afhankelijkheden: apiConfig.js
  * `startAutoRefresh(callback, intervalSeconds)`: 
    * Parameters: 
      * callback (Function): Functie die wordt aangeroepen bij elke update
      * intervalSeconds (number): Verversingsinterval in seconden
    * Return waarde: Geen
    * Afhankelijkheden: apiConfig.js
  * `stopAutoRefresh()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Geen
  * `transformAPIResponse(response)`: 
    * Parameters: 
      * response (Object): API respons object
    * Return waarde: Array met getransformeerde treinlocaties
    * Afhankelijkheden: apiConfig.js

### 3.6 apiConfig.js
* **Status**: Voltooid
* **Bestandsnaam**: api/apiConfig.js
* **Functionaliteit**: Configuratie voor API-endpoints en authenticatie
* **Belangrijkste functies**: 
  * `buildUrl(endpoint)`: 
    * Parameters: 
      * endpoint (string): Relatieve endpoint path
    * Return waarde: Volledige API URL
    * Afhankelijkheden: Geen
  * `configure(options)`: 
    * Parameters: 
      * options (Object): Configuratie opties
    * Return waarde: Geen
    * Afhankelijkheden: Geen

### 3.7 mapRenderer.js
* **Status**: Voltooid
* **Bestandsnaam**: ui/mapRenderer.js
* **Functionaliteit**: Verantwoordelijk voor het initialiseren en renderen van de kaart
* **Belangrijkste functies**:
  * `initMap(container, options)`: 
    * Parameters: 
      * container (HTMLElement): Container element voor de kaart
      * options (Object): Configuratie opties voor de kaart
    * Return waarde: Map object
    * Afhankelijkheden: Leaflet bibliotheek
  * `setMapView(lat, lng, zoom)`: 
    * Parameters: 
      * lat (Number): Latitude
      * lng (Number): Longitude
      * zoom (Number): Zoom niveau
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `resizeMap()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `clearMap()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `addBaseLayer(name, url, options)`: 
    * Parameters: 
      * name (String): Naam van de laag
      * url (String): URL template voor de tilelaag
      * options (Object): Configuratie opties
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `applyQlikTheme()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: QlikStyle
  * `destroyMap()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek

### 3.8 trainVisualizer.js
* **Status**: Voltooid
* **Bestandsnaam**: ui/trainVisualizer.js
* **Functionaliteit**: Verantwoordelijk voor het visualiseren van treinen op de kaart
* **Belangrijkste functies**:
  * `updateTrainPositions(map, trainData, selectedTrainIds, onMarkerClick)`: 
    * Parameters: 
      * map (Object): Map object
      * trainData (Array): Gegevens over treinlocaties
      * selectedTrainIds (Array): Array met geselecteerde trein IDs
      * onMarkerClick (Function): Callback voor klikken op marker
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `addTrainMarker(map, train, selectedTrainIds, onMarkerClick)`:
    * Parameters:
      * map (Object): Map object
      * train (Object): Treingegevens object
      * selectedTrainIds (Array): Array met geselecteerde trein IDs
      * onMarkerClick (Function): Callback voor klikken op marker
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `removeTrainMarker(map, trainId)`:
    * Parameters:
      * map (Object): Map object
      * trainId (String): ID van de trein om te verwijderen
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek
  * `highlightTrainMarker(trainId, shouldHighlight, train)`:
    * Parameters:
      * trainId (String): ID van de trein om te markeren
      * shouldHighlight (Boolean): Of de trein moet worden gemarkeerd
      * train (Object): Treingegevens object (optioneel)
    * Return waarde: Geen
    * Afhankelijkheden: Geen
  * `createPopupContent(train)`:
    * Parameters:
      * train (Object): Treingegevens object
    * Return waarde: String met HTML content voor popup
    * Afhankelijkheden: Geen
  * `clearAllMarkers(map)`:
    * Parameters:
      * map (Object): Map object
    * Return waarde: Geen
    * Afhankelijkheden: Leaflet bibliotheek

### 3.9 style.css
* **Status**: Voltooid - Bijgewerkt met styling voor treingegevens, selectiefunctionaliteit, kaart en markers
* **Bestandsnaam**: lib/css/style.css
* **Functionaliteit**: Stylesheet voor de extensie
* **Belangrijkste functies**: N.v.t. (CSS bestand)

### 3.10 qlik-style.js
* **Status**: Voltooid
* **Bestandsnaam**: lib/js/qlik-style.js
* **Functionaliteit**: Hulpprogramma voor integratie met Qlik stijlen
* **Belangrijkste functies**:
  * `getCurrentTheme()`: 
    * Parameters: Geen
    * Return waarde: Huidige thema CSS klasse
    * Afhankelijkheden: Qlik bibliotheek
  * `applyTheme($element, theme)`: 
    * Parameters:
      * $element (jQuery): Het jQuery element om aan te passen
      * theme (string): Theme naam ('qlik-light' of 'qlik-dark')
    * Return waarde: Geen
    * Afhankelijkheden: jQuery

## 4. Status
Voltooide modules:
- LiveTrainExtension.js (geïntegreerd met trainDataService, selectiefunctionaliteit, mapRenderer en trainVisualizer)
- LiveTrainExtension.qext
- initialProperties.js
- propertyPanel.js (uitgebreid met selectie configuratie-opties)
- api/trainDataService.js
- api/apiConfig.js
- ui/mapRenderer.js
- ui/trainVisualizer.js
- lib/css/style.css (bijgewerkt met styling voor treingegevens, selectiefunctionaliteit, kaart en markers)
- lib/js/qlik-style.js

Alle essentiële modulen zijn nu geïmplementeerd. De extensie beschikt over de basisfunctionaliteit om treinen op een kaart te visualiseren.

## 5. Volgende stappen

### Must-haves:
1. ✅ Basisstructuur opzetten van de Qlik extensie
2. ✅ Implementatie van de trainDataService voor het ophalen van treingegevens (Issue #2)
3. ✅ Integratie met Qlik Sense velden voor filteren op treinnummers (Issue #3)
4. ✅ Basisimplementatie van mapRenderer voor kaartweergave (Issue #4)
5. ✅ Visualisatie van treinen op de kaart (Issue #5)
6. 🔄 Dynamische updates van treinposities (Issue #6)

### Nice-to-haves:
1. Aanpasbare verversingsfrequentie van treingegevens via het eigenschappen paneel
2. Mogelijkheid om verschillende kaartlagen te tonen/verbergen
3. Historische weergave van treinbewegingen
4. Extra informatie tonen bij klikken op een trein (vertraging, bestemming, etc.)
5. Kleurcodering van treinen op basis van status (op tijd, vertraagd, etc.)

We hebben nog één must-have feature te implementeren: de dynamische updates van treinposities (Issue #6). Deze feature is essentieel voor de basiswerking van de applicatie omdat het zorgt voor real-time weergave van treinbewegingen zonder dat gebruikers handmatig hoeven te verversen. Na afronding van deze feature zal de extensie alle noodzakelijke functionaliteit bevatten voor praktisch gebruik in een productieomgeving. De nice-to-have features kunnen daarna worden toegevoegd om de gebruikerservaring en functionaliteit verder te verbeteren.
