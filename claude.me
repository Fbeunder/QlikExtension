# QlikExtension - Live Treinen Volgen

## 1. Projectoverzicht
Dit project betreft een Qlik Sense extensie waarmee gebruikers real-time treinen kunnen volgen in een dashboard. De extensie maakt gebruik van externe API's om treinlocaties op te halen en weer te geven, en kan gefilterd worden op basis van treinnummers die in de Qlik Sense applicatie aanwezig zijn.

## 2. Architectuur
De extensie volgt de standaard Qlik Sense extensie structuur:

```
LiveTrainExtension/
â”œâ”€â”€ LiveTrainExtension.js         # Hoofdmodule voor de extensie
â”œâ”€â”€ LiveTrainExtension.qext       # Qlik extensie metadata bestand
â”œâ”€â”€ initialProperties.js          # InitiÃ«le eigenschappen configuratie
â”œâ”€â”€ propertyPanel.js              # Configuratie van het eigenschappen paneel
â”œâ”€â”€ api/
â”‚   â”œâ”€â”€ trainDataService.js       # Service voor het ophalen van treingegevens
â”‚   â””â”€â”€ apiConfig.js              # API configuratie en endpoints
â”œâ”€â”€ ui/
â”‚   â”œâ”€â”€ mapRenderer.js            # Verantwoordelijk voor het weergeven van de kaart
â”‚   â””â”€â”€ trainVisualizer.js        # Functionaliteit voor het visualiseren van treinen op de kaart
â””â”€â”€ lib/                          # Externe bibliotheken
    â”œâ”€â”€ css/
    â”‚   â””â”€â”€ style.css             # Stylesheet voor de extensie
    â””â”€â”€ js/
        â””â”€â”€ qlik-style.js         # Hulpprogramma voor integratie met Qlik stijlen
```

## 3. Modules

### 3.1 LiveTrainExtension.js
* **Status**: Voltooid - GeÃ¯ntegreerd met trainDataService
* **Bestandsnaam**: LiveTrainExtension.js
* **Functionaliteit**: Hoofdmodule die de extensie initialiseert en integreert met Qlik Sense
* **Belangrijkste functies**:
  * `paint(element, layout)`: 
    * Parameters: 
      * element (HTMLElement): DOM element waar de visualisatie in geplaatst wordt
      * layout (Object): Layout configuratie van Qlik Sense
    * Return waarde: Belofte die wordt opgelost wanneer het tekenen is voltooid
    * Afhankelijkheden: trainDataService.js, apiConfig.js
  * `refreshTrainData(trainNumbers, $element)`: 
    * Parameters: 
      * trainNumbers (Array): Lijst met treinnummers om te filteren
      * $element (jQuery): jQuery element om te updaten
    * Return waarde: Geen
    * Afhankelijkheden: trainDataService.js
  * `controller()`: 
    * Parameters: Geen
    * Return waarde: Controller object
    * Afhankelijkheden: trainDataService.js, apiConfig.js

### 3.2 LiveTrainExtension.qext
* **Status**: Voltooid
* **Bestandsnaam**: LiveTrainExtension.qext
* **Functionaliteit**: Metadata bestand voor de extensie
* **Belangrijkste functies**: N.v.t. (JSON configuratiebestand)

### 3.3 initialProperties.js
* **Status**: Voltooid
* **Bestandsnaam**: initialProperties.js
* **Functionaliteit**: Definieert de initiÃ«le eigenschappen van de extensie
* **Belangrijkste functies**: N.v.t. (exporteert alleen een configuratie object)

### 3.4 propertyPanel.js
* **Status**: Voltooid
* **Bestandsnaam**: propertyPanel.js
* **Functionaliteit**: Definieert het eigenschappen paneel voor de extensie
* **Belangrijkste functies**:
  * `getDefinition()`: 
    * Parameters: Geen
    * Return waarde: Eigenschappen paneel definitie object
    * Afhankelijkheden: Geen

### 3.5 trainDataService.js
* **Status**: Voltooid
* **Bestandsnaam**: api/trainDataService.js
* **Functionaliteit**: Service voor het ophalen van treingegevens van externe API's
* **Belangrijkste functies**:
  * `getTrainLocations(trainNumbers)`: 
    * Parameters: 
      * trainNumbers (Array): Lijst met treinnummers om te filteren
    * Return waarde: Belofte met treinlocatie gegevens
    * Afhankelijkheden: apiConfig.js
  * `startAutoRefresh(callback, intervalSeconds)`: 
    * Parameters: 
      * callback (Function): Functie die wordt aangeroepen bij elke update
      * intervalSeconds (number): Verversingsinterval in seconden
    * Return waarde: Geen
    * Afhankelijkheden: apiConfig.js
  * `stopAutoRefresh()`: 
    * Parameters: Geen
    * Return waarde: Geen
    * Afhankelijkheden: Geen
  * `transformAPIResponse(response)`: 
    * Parameters: 
      * response (Object): API respons object
    * Return waarde: Array met getransformeerde treinlocaties
    * Afhankelijkheden: apiConfig.js

### 3.6 apiConfig.js
* **Status**: Voltooid
* **Bestandsnaam**: api/apiConfig.js
* **Functionaliteit**: Configuratie voor API-endpoints en authenticatie
* **Belangrijkste functies**: 
  * `buildUrl(endpoint)`: 
    * Parameters: 
      * endpoint (string): Relatieve endpoint path
    * Return waarde: Volledige API URL
    * Afhankelijkheden: Geen
  * `configure(options)`: 
    * Parameters: 
      * options (Object): Configuratie opties
    * Return waarde: Geen
    * Afhankelijkheden: Geen

### 3.7 mapRenderer.js
* **Status**: Niet gestart
* **Bestandsnaam**: ui/mapRenderer.js
* **Functionaliteit**: Verantwoordelijk voor het initialiseren en renderen van de kaart
* **Belangrijkste functies**:
  * `initMap(container, options)`: 
    * Parameters: 
      * container (HTMLElement): Container element voor de kaart
      * options (Object): Configuratie opties voor de kaart
    * Return waarde: Map object
    * Afhankelijkheden: Leaflet bibliotheek

### 3.8 trainVisualizer.js
* **Status**: Niet gestart
* **Bestandsnaam**: ui/trainVisualizer.js
* **Functionaliteit**: Verantwoordelijk voor het visualiseren van treinen op de kaart
* **Belangrijkste functies**:
  * `updateTrainPositions(map, trainData)`: 
    * Parameters: 
      * map (Object): Map object
      * trainData (Array): Gegevens over treinlocaties
    * Return waarde: Geen
    * Afhankelijkheden: mapRenderer.js

### 3.9 style.css
* **Status**: Voltooid - Bijgewerkt met styling voor treingegevens
* **Bestandsnaam**: lib/css/style.css
* **Functionaliteit**: Stylesheet voor de extensie
* **Belangrijkste functies**: N.v.t. (CSS bestand)

### 3.10 qlik-style.js
* **Status**: Voltooid
* **Bestandsnaam**: lib/js/qlik-style.js
* **Functionaliteit**: Hulpprogramma voor integratie met Qlik stijlen
* **Belangrijkste functies**:
  * `getCurrentTheme()`: 
    * Parameters: Geen
    * Return waarde: Huidige thema CSS klasse
    * Afhankelijkheden: Qlik bibliotheek
  * `applyTheme($element, theme)`: 
    * Parameters:
      * $element (jQuery): Het jQuery element om aan te passen
      * theme (string): Theme naam ('qlik-light' of 'qlik-dark')
    * Return waarde: Geen
    * Afhankelijkheden: jQuery

## 4. Status
Voltooide modules:
- LiveTrainExtension.js (geÃ¯ntegreerd met trainDataService)
- LiveTrainExtension.qext
- initialProperties.js
- propertyPanel.js
- api/trainDataService.js
- api/apiConfig.js
- lib/css/style.css (bijgewerkt met styling voor treingegevens)
- lib/js/qlik-style.js

Nog te implementeren modules:
- ui/mapRenderer.js
- ui/trainVisualizer.js

## 5. Volgende stappen

### Must-haves:
1. âœ… Basisstructuur opzetten van de Qlik extensie
2. âœ… Implementatie van de trainDataService voor het ophalen van treingegevens (Issue #2)
3. ðŸ”„ Integratie met Qlik Sense velden voor filteren op treinnummers (Issue #3)
4. Basisimplementatie van mapRenderer voor kaartweergave
5. Visualisatie van treinen op de kaart
6. Dynamische updates van treinposities

### Nice-to-haves:
1. Aanpasbare verversingsfrequentie van treingegevens via het eigenschappen paneel
2. Mogelijkheid om verschillende kaartlagen te tonen/verbergen
3. Historische weergave van treinbewegingen
4. Extra informatie tonen bij klikken op een trein (vertraging, bestemming, etc.)
5. Kleurcodering van treinen op basis van status (op tijd, vertraagd, etc.)

Alle bovenstaande must-haves zijn nodig voor de basiswerking van de applicatie. De nice-to-haves zijn verbeteringen die later kunnen worden toegevoegd om de functionaliteit en gebruikerservaring te verbeteren.
